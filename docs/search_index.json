[["ML.html", "Machine Learning Intro Sub analysis 1 Bayesian Theory 2 3 ^_^ Space 4 ^_^ Space 5 ^_^ Space 6 Neural Network 6.1 Introduction 6.2  6.3 Application", " Machine Learning Zehui Bai 01 June, 2021 Intro Placeholder Sub analysis Yet another analysis 1 Bayesian Theory 2 3 ^_^ Space 4 ^_^ Space 5 ^_^ Space 6 Neural Network 6.1 Introduction Artificial Neural NetworkANN 2080  activation function        6.2  1 X1W W H11 W1 H1W3 Y   W1 W2[1, 1]   Y = W3(W1(1) + W2(X1)) sigmoid 301 RectifierMaxouttanh ## sigmoid sigmoid &lt;- function(x) { 1 / ( 1 + exp(-x) ) } x &lt;- seq(-5, 5, .1) plot(sigmoid(x)) ## tanh tanh(x) = 2 * sigmoid(2x) - 1 tanhsigmoid library(ggplot2) s &lt;- sigmoid(x) t &lt;- tanh(x) z &lt;- data.frame(cbind(x, s, t)) ggplot(z, aes(x)) + geom_line(aes(y = s, color = &quot;sigmoid&quot;)) + geom_line(aes(y = t, color = &quot;tanh&quot;)) + labs(x = &quot;Input&quot;,y = &quot;Output&quot;) tanh 01tanh0(0)  sigmoidsigmoid(01) 0 https://www.zhihu.com/question/22553761 6.3 Application 6.3.1  ## MASS, Neuralnetcaretvcd ## 2567useautonoauto ##  data(shuttle) str(shuttle) ## &#39;data.frame&#39;: 256 obs. of 7 variables: ## $ stability: Factor w/ 2 levels &quot;stab&quot;,&quot;xstab&quot;: 2 2 2 2 2 2 2 2 2 2 ... ## $ error : Factor w/ 4 levels &quot;LX&quot;,&quot;MM&quot;,&quot;SS&quot;,..: 1 1 1 1 1 1 1 1 1 1 ... ## $ sign : Factor w/ 2 levels &quot;nn&quot;,&quot;pp&quot;: 2 2 2 2 2 2 1 1 1 1 ... ## $ wind : Factor w/ 2 levels &quot;head&quot;,&quot;tail&quot;: 1 1 1 2 2 2 1 1 1 2 ... ## $ magn : Factor w/ 4 levels &quot;Light&quot;,&quot;Medium&quot;,..: 1 2 4 1 2 4 1 2 4 1 ... ## $ vis : Factor w/ 2 levels &quot;no&quot;,&quot;yes&quot;: 1 1 1 1 1 1 1 1 1 1 ... ## $ use : Factor w/ 2 levels &quot;auto&quot;,&quot;noauto&quot;: 1 1 1 1 1 1 1 1 1 1 ... table(shuttle$use) ## ## auto noauto ## 145 111 ## vcd  table1 &lt;- structable(wind + magn ~ use, shuttle) table1 ## wind head tail ## magn Light Medium Out Strong Light Medium Out Strong ## use ## auto 19 19 16 18 19 19 16 19 ## noauto 13 13 16 14 13 13 16 13 ## vcdmosaic()structable() p mosaic(table1, shade = T) ## structable()mosaic()  ##  mosaic(use ~ error + vis, shuttle) ## prop.table()table() table(shuttle$use, shuttle$stability) ## ## stab xstab ## auto 81 64 ## noauto 47 64 prop.table(table(shuttle$use, shuttle$stability)) ## ## stab xstab ## auto 0.3164062 0.2500000 ## noauto 0.1835938 0.2500000 ## p chisq.test(shuttle$use, shuttle$stability) ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ## data: shuttle$use and shuttle$stability ## X-squared = 4.0718, df = 1, p-value = 0.0436 ##  caret dummies &lt;- dummyVars(use ~. ,shuttle, fullRank = T) dummies ## Dummy Variable Object ## ## Formula: use ~ . ## 7 variables, 7 factors ## Variables and levels will be separated by &#39;.&#39; ## A full rank encoding is used shuttle.2 &lt;- data.frame(predict(dummies, newdata = shuttle)) names(shuttle.2) ## [1] &quot;stability.xstab&quot; &quot;error.MM&quot; &quot;error.SS&quot; &quot;error.XL&quot; ## [5] &quot;sign.pp&quot; &quot;wind.tail&quot; &quot;magn.Medium&quot; &quot;magn.Out&quot; ## [9] &quot;magn.Strong&quot; &quot;vis.yes&quot; head(shuttle.2) ## stability.xstab error.MM error.SS error.XL sign.pp wind.tail magn.Medium ## 1 1 0 0 0 1 0 0 ## 2 1 0 0 0 1 0 1 ## 3 1 0 0 0 1 0 0 ## 4 1 0 0 0 1 1 0 ## 5 1 0 0 0 1 1 1 ## 6 1 0 0 0 1 1 0 ## magn.Out magn.Strong vis.yes ## 1 0 0 0 ## 2 0 0 0 ## 3 0 1 0 ## 4 0 0 0 ## 5 0 0 0 ## 6 0 1 0 ## ifelse() shuttle.2$use &lt;- ifelse(shuttle$use == &quot;auto&quot;, 1, 0) table(shuttle.2$use) ## ## 0 1 ## 111 145 ## caret 70/30  set.seed(123) trainIndex &lt;- createDataPartition(shuttle.2$use, p = .7, list = F) # head(trainIndex) shuttleTrain &lt;- shuttle.2[ trainIndex, ] shuttleTest &lt;- shuttle.2[-trainIndex, ] 6.3.2  nerualnet nerualnet()4 hidden31 act.fcttanh err.fctssece  linear.outputact.fctTRUE FALSE * ## neuralnety ~, as.formula()  n &lt;- names(shuttleTrain) form &lt;- as.formula(paste(&quot;use ~&quot;, paste(n[!n %in% &quot;use&quot;], collapse = &quot; + &quot;))) form ## use ~ stability.xstab + error.MM + error.SS + error.XL + sign.pp + ## wind.tail + magn.Medium + magn.Out + magn.Strong + vis.yes set.seed(1) fit &lt;- neuralnet(form, data = shuttleTrain, hidden = c(2, 1), err.fct = &quot;ce&quot;, linear.output = F) fit$result.matrix ## [,1] ## error 0.006745424 ## reached.threshold 0.008028217 ## steps 251.000000000 ## Intercept.to.1layhid1 -2.913396291 ## stability.xstab.to.1layhid1 1.061971240 ## error.MM.to.1layhid1 -1.507105083 ## error.SS.to.1layhid1 -1.960491707 ## error.XL.to.1layhid1 -0.557518418 ## sign.pp.to.1layhid1 -0.362270154 ## wind.tail.to.1layhid1 -0.093003853 ## magn.Medium.to.1layhid1 0.012907060 ## magn.Out.to.1layhid1 1.118360425 ## magn.Strong.to.1layhid1 0.257518170 ## vis.yes.to.1layhid1 4.650735293 ## Intercept.to.1layhid2 1.560214842 ## stability.xstab.to.1layhid2 -1.204509288 ## error.MM.to.1layhid2 -0.000887696 ## error.SS.to.1layhid2 0.904825578 ## error.XL.to.1layhid2 -0.231255788 ## sign.pp.to.1layhid2 0.382575500 ## wind.tail.to.1layhid2 0.592086158 ## magn.Medium.to.1layhid2 0.058625357 ## magn.Out.to.1layhid2 -1.051535539 ## magn.Strong.to.1layhid2 0.179652043 ## vis.yes.to.1layhid2 -2.693403633 ## Intercept.to.2layhid1 1.615079923 ## 1layhid1.to.2layhid1 -15.554046037 ## 1layhid2.to.2layhid1 14.713278061 ## Intercept.to.use -12.182285372 ## 2layhid1.to.use 24.844204493 ## Interpretation: 0.0099steps 0.1 vis.yes.to.1layhid16.21 ## : i  xii  head(fit$generalized.weights[[1]]) ## [,1] [,2] [,3] [,4] [,5] ## 1 -0.0058040120 0.0022578370 0.0061042939 2.793278e-05 0.0018809227 ## 4 -0.0007663366 0.0003444101 0.0008416829 2.706483e-05 0.0002491154 ## 5 -0.0006637593 0.0003076139 0.0007361950 2.814040e-05 0.0002159244 ## 6 -0.0007314225 0.0004031544 0.0008607337 6.341801e-05 0.0002389983 ## 7 -0.0444148565 0.0195765927 0.0484852322 1.374447e-03 0.0144317093 ## 8 -0.0367735469 0.0164391436 0.0403214453 1.254416e-03 0.0119526383 ## [,6] [,7] [,8] [,9] [,10] ## 1 0.0022094031 1.855860e-04 -0.0053538239 2.417218e-04 -0.016392872 ## 4 0.0002785484 2.252078e-05 -0.0007127678 1.914664e-05 -0.002234323 ## 5 0.0002386163 1.910769e-05 -0.0006185411 1.401738e-05 -0.001949295 ## 6 0.0002446797 1.830607e-05 -0.0006897356 -2.256756e-06 -0.002244884 ## 7 0.0162533313 1.321717e-03 -0.0412613771 1.215746e-03 -0.128915111 ## 8 0.0133914379 1.084446e-03 -0.0341918523 9.429830e-04 -0.107084095 ##  plot(fit) ## vis.yeswind.tail ## vis.yeswind.tail par(mfrow=c(1,2)) gwplot(fit, selected.covariate = &quot;vis.yes&quot;) gwplot(fit, selected.covariate = &quot;wind.tail&quot;) ## compute()fit resultsTrain &lt;- compute(fit, shuttleTrain[, 1:10]) ## 01 predTrain &lt;- resultsTrain$net.result predTrain &lt;- ifelse(predTrain &gt;= 0.5, 1, 0) table(predTrain, shuttleTrain$use) ## ## predTrain 0 1 ## 0 73 0 ## 1 0 107 ## Interpretation: , 100% ##  resultsTest &lt;- compute(fit, shuttleTest[,1:10]) predTest &lt;- resultsTest$net.result predTest &lt;- ifelse(predTest &gt;= 0.5, 1, 0) table(predTest, shuttleTest$use) ## ## predTest 0 1 ## 0 38 2 ## 1 0 36 ## which() which(predTest == 1 &amp; shuttleTest$use == 0) ## integer(0) shuttleTest[62,] ## stability.xstab error.MM error.SS error.XL sign.pp wind.tail magn.Medium ## 215 0 0 1 0 1 1 0 ## magn.Out magn.Strong vis.yes use ## 215 0 1 1 1 "]]
